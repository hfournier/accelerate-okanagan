---
import { Image } from "astro:assets"
import type { CollectionEntry } from "astro:content"
import { getEntry } from "astro:content"
import { getCollection } from "astro:content"
import { Icon } from "astro-icon/components"

const jobs = (await getCollection("job", (job) => job.data.author)).sort(
	(a, b) => b.data.createdAt.valueOf() - a.data.createdAt.valueOf()
)

const getAuthor = async (job: CollectionEntry<"job">) => {
	if (job.data.author) {
		return (await getEntry(job.data.author)).data
	} else {
		return null
	}
}

const getLocation = async (job: CollectionEntry<"job">) => {
	if (job.data.location && job.data.location.length > 0) {
		return (await getEntry(job.data.location[0])).data
	} else {
		return null
	}
}
---

<div class="flex max-h-[445px] px-12 md:pl-16 md:pr-0">
	<div class="flex flex-col gap-4">
		<button
			class="rounded-full border-2 border-neutral-100 p-2 text-primary transition-colors duration-200 enabled:hover:border-primary enabled:hover:bg-primary enabled:hover:text-white disabled:text-neutral-100 md:p-3"
			id="btnJobsUp"
			type="button"
			disabled>
			<span class="sr-only">Scroll Up</span>
			<Icon class="size-6 md:size-8" name="mdi:chevron-up" aria-hidden="true" />
		</button>
		<button
			class="rounded-full border-2 border-neutral-100 p-2 text-primary transition-colors duration-200 enabled:hover:border-primary enabled:hover:bg-primary enabled:hover:text-white disabled:text-neutral-100 md:p-3"
			id="btnJobsDown"
			type="button">
			<span class="sr-only">Scroll Down</span>
			<Icon class="size-6 md:size-8" name="mdi:chevron-down" aria-hidden="true" />
		</button>
	</div>
	<ul
		class="flex flex-col gap-7 divide-y divide-neutral-200 overflow-y-hidden md:px-4"
		id="jobsList">
		{
			jobs.map((job) => (
				<li class="">
					<a href={`/job/${job.id}`} class="group flex gap-8 pt-6">
						<div class="grid gap-8 md:grid-cols-[150px_1fr]">
							{getAuthor(job).then((author) => (
								<>
									<Image
										class="h-full max-h-[70px] w-full max-w-fit object-contain md:place-self-center"
										src={author?.logo!}
										alt={author?.name!}
									/>
									<div class="flex grow flex-col gap-2">
										<div class="text-balance font-semibold uppercase leading-tight group-hover:text-primary">
											{job.data.title}
										</div>
										<div class="flex flex-col gap-4 text-sm font-semibold uppercase text-neutral-500 group-hover:text-primary md:flex-row md:items-center">
											<span class="">{author?.name}</span>
											{getLocation(job).then(
												(location) =>
													location && (
														<>
															<span class="hidden text-primary md:inline">|</span>
															<div class="flex gap-2">
																<Icon
																	class="flex size-4 gap-4"
																	name="mdi:map-marker"
																	aria-hidden="true"
																/>
																<div class="group-hover:text-primary">{location?.name}</div>
															</div>
														</>
													)
											)}
										</div>
										<time
											class="pt-2 text-[0.75rem] text-neutral-500 group-hover:text-primary"
											datetime={job.data.createdAt.toISOString()}>
											{job.data.createdAt.toLocaleDateString(undefined, {
												month: "long",
												day: "numeric",
												year: "numeric"
											})}
										</time>
									</div>
								</>
							))}
						</div>
					</a>
				</li>
			))
		}
	</ul>
</div>

<script>
	const ulJobList = document.querySelector<HTMLUListElement>("ul#jobsList")
	const btnJobsUp = document.getElementById("btnJobsUp") as HTMLButtonElement
	const btnJobsDown = document.getElementById("btnJobsDown") as HTMLButtonElement

	btnJobsUp.addEventListener("click", () => {
		ulJobList?.scrollBy({ top: -ulJobList?.clientHeight, left: 0, behavior: "smooth" })
		btnJobsUp.disabled = true
		btnJobsDown.disabled = false
	})

	btnJobsDown.addEventListener("click", () => {
		ulJobList?.scrollBy({ top: ulJobList?.clientHeight, left: 0, behavior: "smooth" })
		btnJobsDown.disabled = true
		btnJobsUp.disabled = false
	})
</script>
